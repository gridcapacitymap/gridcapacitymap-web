version: "3.8"

volumes:
  # volume names will be referenced by `.vscode/devcontainer`
  python_site_packages:
    name: "gridmap_backend_site_packages"
  python_pip_cache:
    name: "gridmap_backend_pip_cache"
  python_local_bin:
    name: "gridmap_backend_local_bin"
  redis_data:

networks:
  default:
    # network names will be referenced by `.vscode/devcontainer`
    name: gridmap_default

services:
  gridmap_maplibre:
    image: node:18
    restart: unless-stopped
    # https://stackoverflow.com/a/60521558
    security_opt:
      - label:disable
    environment:
      BACKEND_API_URL: http://gridmap_backend:8000
      VITE_DEFAULT_NETWORK_ID: 69486f96-c821-46c8-a470-4dbb9fa56c35

  gridmap_backend:
    image: python:3.10-slim
    restart: unless-stopped
    # https://stackoverflow.com/a/60521558
    security_opt:
      - label:disable

  gridcapacity_worker:
    image: python:3.10-slim
    # https://stackoverflow.com/a/60521558
    security_opt:
      - label:disable

  postgreshost:
    image: postgis/postgis:15-3.3
    command: postgres -c 'max_connections=200'
    ports:
      - "5432:5432"
    volumes:
      # updating initial data dumps from terminal
      # CAUTION: these dumps should be used for development purposes
      # docker-compose exec postgreshost sh -c 'pg_dump -C -h localhost -d gridmapdb -p 5432 -U postgres_user -W | gzip > /docker-entrypoint-initdb.d/gridmapdb.sql.gz'
      # docker-compose exec postgreshost sh -c 'pg_dump -C -h localhost -d keycloak -p 5432 -U postgres_user -W | gzip > /docker-entrypoint-initdb.d/keycloak.sql.gz'
      - ./data/initdb:/docker-entrypoint-initdb.d:Z
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: password
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 30s
    #   timeout: 5s
    #   retries: 5

    restart: unless-stopped

  redis:
    image: "redis:7.2.0-alpine"
    volumes:
      - redis_data:/data
    restart: unless-stopped
